name: Tofu Run

on:
  workflow_dispatch:
    inputs:
      state_run_id:
        required: true
        type: number
            

jobs:
  job1:
    name: Tofu Plan
    runs-on: ubuntu-latest
    container: ghcr.io/opentofu/opentofu:1.9
    permissions: read-all
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

    - name: install gnu-tar for save and restore to work
      run: apk add -U tar

    - uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684  # v4.2.3
      id: restore-cache
      with:
        path: |
          .terraform
          .terraform.lock.hcl
        key: ${{ runner.os }}-${{ hashFiles('providers.tf') }}

    - name: pull the state, if needed
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093  # v4.3.0
      with:
        name: state
        # without this, it ignores run-id :fu:
        github-token: ${{ github.token }}
        run-id: ${{ inputs.state_run_id }}
      continue-on-error: true

    - shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.REPO0_TOKEN }}
      run: |
        export GITHUB_TOKEN
        tofu init -input=false
        TF_LOG=TRACE; export TF_LOG
        rc=0
        if ! tofu plan -input=false -no-color -detailed-exitcode -out=plan.out 2>plan.err | tee plan.log; then
          rc=${PIPESTATUS[0]}
        fi
        if [[ $rc -eq 0 ]]; then
          # I *think the way GHA wants this is via GITHUB_OUTPUTS and if: for later steps
          echo "Noting to do, stop"
          exit 1
        fi
        if [[ $rc -eq 1 ]]; then
          echo "::group::Plan Stderr"
          cat plan.err
          echo "::endgroup::"
          echo "---"
          grep ERROR plan.err
          exit $rc
        fi
        echo "Ok, RC=$rc so good luck ..."

    - name: store the plan
      id: upload-manifests
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
      with:
        name: plan
        path: plan.out
        retention-days: 7

    - uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684  # v4.2.3
      if: always() && steps.restore-cache.outputs.cache-hit != 'true'
      id: save-cache
      with:
        path: |
          .terraform
          .terraform.lock.hcl
        key: ${{ runner.os }}-${{ hashFiles('providers.tf') }}

    - shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.REPO0_TOKEN }}
      run: |
        ls -la
        xxd -l 512 plan.out || true
        export GITHUB_TOKEN
        TF_LOG=TRACE; export TF_LOG
        rc=0
        if ! tofu apply -input=false -auto-approve -no-color plan.out 2>apply.err | tee apply.log; then
          rc=${PIPESTATUS[0]}
        fi
        if [[ $rc -ne 0 ]]; then
          echo "::group::Apply Stderr"
          cat apply.err
          echo "::endgroup::"
          echo "---"
          grep ERROR plan.err
          exit $rc
        fi

    - name: store the state
      id: upload-state
      if: always()
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
      with:
        name: state
        path: '*.tfstate'
        retention-days: 7
